/*
 * Created on 2022-06-11 ( Time 19:24:49 )
 * Generated by Telosys Tools Generator ( version 3.3.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package ci.palmafrique.vonabri.dao.entity;

import java.io.Serializable;

import lombok.*;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "travailleur"
 *
 * @author Telosys Tools Generator
 *
 */
@Data
@ToString
@Entity
@Table(name="travailleur" )
public class Travailleur implements Serializable, Cloneable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="nom", length=255)
    private String     nom          ;

    @Column(name="prenom", length=255)
    private String     prenom       ;

    @Column(name="email", length=255)
    private String     email        ;
    
    @Column(name="date_de_nassance")
    private Date       dateDeNaissance;

    @Column(name="contact1", length=255)
    private String     contact1     ;

    @Column(name="contact2", length=255)
    private String     contact2     ;

    @Column(name="domicile", length=255)
    private String     domicile     ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="date_embauche")
    private Date       dateEmbauche ;

    @Column(name="matricule", length=255)
    private String     matricule    ;

    @Column(name="nombre_epouse" ,columnDefinition = "integer default 0")
    private Integer    nombreEpouse ;

    @Column(name="nombre_enfants",columnDefinition = "integer default 0")
    private Integer    nombreEnfants ;

    @Column(name="nombre_filles",columnDefinition = "integer default 0")
    private Integer    nombreFilles ;

    @Column(name="nombre_garcons",columnDefinition = "integer default 0")
    private Integer    nombreGarcons ;

    @Column(name="nombre_adoption" ,columnDefinition = "integer default 0")
    private Integer    nombreAdoption ;

    @Column(name="nombre_enfant_sous_tutelle_direct" ,columnDefinition = "integer default 0")
    private Integer    nombreEnfantSousTutelleDirect ;

    @Column(name="nombre_enfant_sous_tutelle_indirect" ,columnDefinition = "integer default 0")
    private Integer    nombreEnfantSousTutelleIndirect ;
    
    
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_at")
    private Date       createdAt    ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="deleted_at")
    private Date       deletedAt    ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="updated_at")
    private Date       updatedAt    ;

    @Column(name="created_by")
    private Integer    createdBy    ;

    @Column(name="updated_by")
    private Integer    updatedBy    ;

    @Column(name="deleted_by")
    private Integer    deletedBy    ;

    @Column(name="is_deleted")
    private Boolean    isDeleted    ;

	// "siteId" (column "site_id") is not defined by itself because used as FK in a link 
	// "sousSiteId" (column "sous_site_id") is not defined by itself because used as FK in a link 
	// "statutId" (column "statut_id") is not defined by itself because used as FK in a link 
	// "employeurId" (column "employeur_id") is not defined by itself because used as FK in a link 
	// "directionId" (column "direction_id") is not defined by itself because used as FK in a link 
	// "fonctionId" (column "fonction_id") is not defined by itself because used as FK in a link 
	// "posteDeTravailId" (column "poste_de_travail_id") is not defined by itself because used as FK in a link 
	// "sousPosteDeTravailId" (column "sous_poste_de_travail_id") is not defined by itself because used as FK in a link 
	// "ancienneteSocieteId" (column "anciennete_societe_id") is not defined by itself because used as FK in a link 
	// "anciennetePosteId" (column "anciennete_poste_id") is not defined by itself because used as FK in a link 
	// "ethniePereId" (column "ethnie_pere_id") is not defined by itself because used as FK in a link 
	// "ethnieMereId" (column "ethnie_mere_id") is not defined by itself because used as FK in a link 
	// "statutMatrimonialId" (column "statut_matrimonial_id") is not defined by itself because used as FK in a link 
	// "typeMariageId" (column "type_mariage_id") is not defined by itself because used as FK in a link 
	// "regimeId" (column "regime_id") is not defined by itself because used as FK in a link 
	// "gestionDeBienId" (column "gestion_de_bien_id") is not defined by itself because used as FK in a link 

    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="sous_poste_de_travail_id", referencedColumnName="id")
    private SousPosteDeTravail sousPosteDeTravail;
    @ManyToOne
    @JoinColumn(name="employeur_id", referencedColumnName="id")
    private Employeur employeur   ;
    @ManyToOne
    @JoinColumn(name="site_id", referencedColumnName="id")
    private Site site        ;
    @ManyToOne
    @JoinColumn(name="anciennete_societe_id", referencedColumnName="id")
    private Anciennete ancienneteSociete ;
    @ManyToOne
    @JoinColumn(name="regime_id", referencedColumnName="id")
    private Regime regime      ;
    @ManyToOne
    @JoinColumn(name="anciennete_poste_id", referencedColumnName="id")
    private Anciennete anciennetePoste  ;
    @ManyToOne
    @JoinColumn(name="ethnie_pere_id", referencedColumnName="id")
    private Ethnie ethniePere     ;
    @ManyToOne
    @JoinColumn(name="statut_id", referencedColumnName="id")
    private Statut statut      ;
    @ManyToOne
    @JoinColumn(name="ethnie_mere_id", referencedColumnName="id")
    private Ethnie ethnieMere      ;
    @ManyToOne
    @JoinColumn(name="gestion_de_bien_id", referencedColumnName="id")
    private GestionDeBien gestionDeBien;
    @ManyToOne
    @JoinColumn(name="poste_de_travail_id", referencedColumnName="id")
    private PosteDeTravail posteDeTravail;
    @ManyToOne
    @JoinColumn(name="fonction_id", referencedColumnName="id")
    private Fonction fonction    ;
    @ManyToOne
    @JoinColumn(name="direction_id", referencedColumnName="id")
    private Direction direction   ;
    @ManyToOne
    @JoinColumn(name="type_mariage_id", referencedColumnName="id")
    private TypeMariage typeMariage ;
    @ManyToOne
    @JoinColumn(name="statut_matrimonial_id", referencedColumnName="id")
    private StatutMatrimonial statutMatrimonial;
    @ManyToOne
    @JoinColumn(name="sous_site_id", referencedColumnName="id")
    private SousSite sousSite    ;

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public Travailleur() {
		super();
    }
    
	//----------------------------------------------------------------------
    // clone METHOD
    //----------------------------------------------------------------------
	@Override
	public java.lang.Object clone() throws CloneNotSupportedException {
		return super.clone();
	}
}
